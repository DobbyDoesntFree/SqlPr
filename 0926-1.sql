--CREATE TABLE MY_TABLE
--(
--  KEY1 CHAR(4),
--  KEY2 CHAR(4),
--  KEY3 CHAR(4),
--  KEY4 CHAR(4),
--  VAL NUMBER
--);

/*
INSERT INTO TABLE_NAME VALUES (값 4개) >> 1:1 대응, 순차적 매핑
INSERT INTO TABLE_NAME () COLUMN_NAME VALUES () >> 1:1 대응, 순차적 매핑(COLUMN 따라)
*/
--DROP TABLE MY_TABLE;
--
--INSERT INTO MY_TABLE VALUES ('AAAA','AAA','AA','A',100);
--INSERT INTO MY_TABLE VALUES('AAAA','AAA','AA','B',110  ) ;
--INSERT INTO MY_TABLE VALUES('AAAA','AAA','BB','A',120);
--INSERT INTO MY_TABLE VALUES('AAAA','AAA','BB','B',130);
--INSERT INTO MY_TABLE VALUES('AAAA','BBB','AA','A',140);
--INSERT INTO MY_TABLE VALUES('AAAA','BBB','AA','B',150);
--INSERT INTO MY_TABLE VALUES('AAAA','BBB','BB','A',160);
--INSERT INTO MY_TABLE VALUES('AAAA','BBB','BB','B',170);
--INSERT INTO MY_TABLE VALUES('BBBB','AAA','AA','A',180);
--INSERT INTO MY_TABLE VALUES('BBBB','AAA','AA','B',190);
--INSERT INTO MY_TABLE VALUES('BBBB','AAA','BB','A',200);
--INSERT INTO MY_TABLE VALUES('BBBB','AAA','BB','B',210);
--INSERT INTO MY_TABLE VALUES('BBBB','BBB','AA','A',220);
--INSERT INTO MY_TABLE VALUES('BBBB','BBB','AA','B',230);
--INSERT INTO MY_TABLE VALUES('BBBB','BBB','BB','A',240);
--INSERT INTO MY_TABLE VALUES('BBBB','BBB','BB','B',250);

SELECT *
FROM MY_TABLE;

--1. 전체 개수 출력
SELECT COUNT(*)
FROM MY_TABLE;

--2. KEY1, KEY2 그룹핑 > 그룹별 개수와 VAL의 합
SELECT KEY1, KEY2, COUNT(*), SUM(VAL)
FROM MY_TABLE
GROUP BY KEY1, KEY2
ORDER BY 1,2;

--3. KEY 이용한 ROLLUP
SELECT KEY1, KEY2, COUNT(*), SUM(VAL)
FROM MY_TABLE
GROUP BY KEY1, ROLLUP (KEY2)
ORDER BY 1,2;

--4. KEY1~3 이용한 ROLLUP. 단, KEY2~3 만 그룹으로
SELECT KEY1, KEY2, KEY3, COUNT(*), SUM(VAL)
FROM MY_TABLE
GROUP BY KEY1, ROLLUP(KEY2, KEY3)
ORDER BY 1,2,3;

--5. KEY1~4 이용한 ROLLUP. 단, KEY3~4 그룹으로
SELECT KEY1, KEY2, KEY3, KEY4, COUNT(*), SUM(VAL)
FROM MY_TABLE
GROUP BY KEY1, KEY2, ROLLUP(KEY3, KEY4)
ORDER BY 1,2,3,4;

--6 GROUPING >> GROUPING은 1, 0을 RETURN (1이면 해당 셀 기준으로 이상의 것들 집계됨, 0은 아님)
SELECT GROUPING(KEY1) AS GP01, COUNT(*), SUM(VAL)
FROM MY_TABLE
GROUP BY KEY1;

--7 
SELECT GROUPING(KEY1) AS GP01, 
GROUPING(KEY2) AS GP02, 
GROUPING(KEY3) AS GP03, 
COUNT(*), SUM(VAL)
FROM MY_TABLE
GROUP BY KEY1, ROLLUP(KEY2,KEY3);

--8 GROUPING ID
SELECT GROUPING(KEY1) AS GP01, 
GROUPING(KEY2) AS GP02, 
GROUPING(KEY3) AS GP03, 
GROUPING_ID(KEY1,KEY2,KEY3) AS GID, KEY1,KEY2,KEY3,
COUNT(*), SUM(VAL)
FROM MY_TABLE
GROUP BY KEY1, ROLLUP(KEY2,KEY3)
ORDER BY KEY1,KEY2,KEY3;

--9 CUBE 사용, KEY1~3을 그룹핑
SELECT GROUPING(KEY1) AS GP01, 
GROUPING(KEY2) AS GP02, 
GROUPING(KEY3) AS GP03, 
GROUPING_ID(KEY1,KEY2,KEY3) AS GID, KEY1,KEY2,KEY3,
COUNT(*), SUM(VAL)
FROM MY_TABLE
GROUP BY CUBE(KEY1, KEY2,KEY3)
--괄호 묶으면 괄호 안의 것들이 동시에 들어있는 경우만 나열됨
ORDER BY KEY1,KEY2,KEY3;

--9 CUBE 사용, KEY2,(KEY1,KEY3)을 그룹핑
SELECT GROUPING(KEY1) AS GP01, 
GROUPING(KEY2) AS GP02, 
GROUPING(KEY3) AS GP03, 
GROUPING_ID(KEY1,KEY2,KEY3) AS GID, KEY1,KEY2,KEY3,
COUNT(*), SUM(VAL)
FROM MY_TABLE
GROUP BY CUBE(KEY2, (KEY1,KEY3))
--괄호 묶으면 괄호 안의 것들이 동시에 들어있는 경우만 나열됨
ORDER BY KEY2,KEY1,KEY3;

--10 GROUPING SET
SELECT GROUPING(KEY1) AS GP01, 
GROUPING(KEY2) AS GP02, 
GROUPING(KEY3) AS GP03, 
GROUPING_ID(KEY1,KEY2,KEY3) AS GID, KEY1,KEY2,KEY3,
COUNT(*), SUM(VAL)
FROM MY_TABLE
GROUP BY GROUPING SETS (KEY2, (KEY1,KEY3), () )
--열의 부분합을 RETUNR
ORDER BY KEY2,KEY1,KEY3;